apply plugin : "com.android.library"
apply plugin : "org.jetbrains.kotlin.android"
apply plugin: "kotlin-parcelize"
apply plugin: 'kotlin-kapt'
apply plugin: 'com.google.dagger.hilt.android'

android {
    compileSdk AppConfig.compileSdk
    namespace AppConfig.applicationId

    defaultConfig {
        compileSdk AppConfig.compileSdk
        minSdk AppConfig.minSdk
        targetSdk AppConfig.targetSdk
        versionCode AppConfig.versionCode
        versionName AppConfig.versionName

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles("consumer-rules.pro")
    }

    buildTypes {
        def localProperties = new Properties()
        localProperties.load(new FileInputStream(rootProject.file("local.properties")))

        debug {
            buildConfigField("String","API_KEY", localProperties["API_KEY"])
            buildConfigField("String","SECRET_KEY", localProperties["SECRET_KEY"])
            buildConfigField("String","BASE_URL", localProperties["BASE_URL"])
        }

        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            buildConfigField("String","API_KEY", localProperties["API_KEY"])
            buildConfigField("String","SECRET_KEY", localProperties["SECRET_KEY"])
            buildConfigField("String","BASE_URL", localProperties["BASE_URL"])
        }
    }

    compileOptions {
        coreLibraryDesugaringEnabled true
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }
    kotlinOptions {
        jvmTarget = AppConfig.jvmTarget
        freeCompilerArgs = ['-Xjvm-default=compatibility']
    }

    buildFeatures {
        buildConfig true
    }

    dependencies {
        implementation AndroidX.coreKtx
        implementation AndroidX.lifecycle

        implementation DaggerHilt.hiltAndroid
        kapt DaggerHilt.hiltCompiler

        implementation Timber.timber

        testImplementation(TestLibs.jUnit)
        androidTestImplementation(TestLibs.jUnitExt)
        androidTestImplementation(TestLibs.espressoCore)
    }
}